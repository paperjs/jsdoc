<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
	<head>
		<meta http-equiv="content-type" content="text/html; charset={+JSDOC.opt.e+}" />
		<meta name="generator" content="JsDoc Toolkit" />
		{!Link.base = "../"; /* all generated links will be relative to this */!}
		<title>JsDoc Reference - {+data.get('alias')+}</title>
		
		<style type="text/css">
			{+include("static/default.css")+}
		</style>
	</head>
	
	<body>
	
<!-- header -->	
		{+include("static/header.html")+}

<!-- class index -->		
		<div id="index">
			{+publish.classesIndex+}
		</div>
		
		<div id="content">
		
<!-- title -->
			<h1 class="classTitle">
				<if test="data.isBuiltin()">Built-In </if>{!output+=(data.isNamespace())?"Namespace ":"Class ";!}{+data.get('alias')+}
			</h1>

<!-- class summary -->			
			<p class="description">
				<if test="data.get('augments').length"><br />Extends
					{+
						data.get('augments')
						.sort()
						.map(
							function($) { return new Link().toSymbol($); }
						)
						.join(", ")
					+}.<br />
				</if>
			
				{+resolveLinks(data.get('classDesc'))+}
				
				<if test="!data.isBuiltin()">{# isn't defined in any file #}
					<br /><i>Defined in: </i> {+new Link().toSrc(data.get('srcFile'))+}.
				</if>
			</p>

<!-- constructor summary -->			
			<if test="!data.isNamespace() && !data.isBuiltin()">{# have no documented constructor #}
			<table class="summaryTable" cellspacing="0" summary="A summary of the constructor documented in the class {+data.get('alias')+}.">
				<caption>Constructor Summary</caption>
				<thead>
					<tr>
						<th scope="col">Constructor Attributes</th>
						<th scope="col">Constructor Name and Description</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td class="attributes">{!
							if (data.get('isPrivate')) output += "&lt;private&gt; ";
							if (data.get('isInner')) output += "&lt;inner&gt; ";
						!}</td>
						<td class="nameDescription">
							<div class="fixedFont">new <b>{+new Link().toSymbol(data.get('alias'))+}</b>{+ makeSignature(data.get('params')) +}</div>
							<div class="description">{+resolveLinks(summarize(data.get('desc')))+}</div>
						</td>
					</tr>
				</tbody>
			</table>
			</if>
			
<!-- properties summary -->			
			<if test="data.get('properties').length">
				{! var ownProperties = data.getProperties().filter(function($){return $.get('memberof') == data.get('alias')}).sort(makeSortby("name")); !}
				<if test="ownProperties.length">
				<table class="summaryTable" cellspacing="0" summary="A summary of the fields documented in the class {+data.get('alias')+}.">
					<caption>Field Summary</caption>
					<thead>
						<tr>
							<th scope="col">Field Attributes</th>
							<th scope="col">Field Name and Description</th>
						</tr>
					</thead>
					<tbody>
					<for each="member" in="ownProperties">
						<tr>
							<td class="attributes">{!
								if (member.get('isPrivate')) output += "&lt;private&gt; ";
								if (member.get('isStatic')) output += "&lt;static&gt; ";
							!}</td>
							<td class="nameDescription">
								<div class="fixedFont">
								<if test="member.get('isStatic')">{+member.get('memberof')+}.</if><b>{+new Link().toSymbol(member.get('alias')).withText(member.get('name'))+}</b>
								<if test="member.get('type')"><span class="light"> : {+new Link().toSymbol(member.get('type'))+}</span></if>
								</div>
								<div class="description">{+resolveLinks(summarize(member.get('desc')))+}</div>
							</td>
						</tr>
					</for>
					</tbody>
				</table>
				</if>
				
				<if test="data.get('inheritsFrom').length">
				<dl class="inheritsList">
				{!
					var inheritedMembers = data.get('properties').filter(function($) {return $.get('memberof') != data.get('alias')});
					var contributers = [];
					inheritedMembers.map(function($) {if (contributers.indexOf($.get('memberof')) < 0) contributers.push($.get('memberof'))});
					for (var i = 0, l = contributers.length; i < l; i++) {
						output +=
							"<dt>Fields inherited from class "+new Link().toSymbol(contributers[i])+": </dt>"
							+
							"<dd>" +
							inheritedMembers
							.filter(
								function($) { return $.get('memberof') == contributers[i] }
							)
							.sort(makeSortby("name"))
							.map(
								function($) { return new Link().toSymbol($.get('alias')).withText($.get('name')) }
							)
							.join(", ")
							+
							"</dd>";
					}
				!}
				</dl>
				</if>
			</if>

<!-- methods summary -->			
			<if test="data.get('methods').length">
				{! var ownMethods = data.get('methods').filter(function($){return $.get('memberof') == data.get('alias')}).sort(makeSortby("name")); !}
				<if test="ownMethods.length">
				<table class="summaryTable" cellspacing="0" summary="A summary of the methods documented in the class {+data.get('alias')+}.">
					<caption>Method Summary</caption>
					<thead>
						<tr>
							<th scope="col">Method Attributes</th>
							<th scope="col">Method Name and Description</th>
						</tr>
					</thead>
					<tbody>
					<for each="member" in="ownMethods">
						<tr>
							<td class="attributes">{!
								if (member.get('isPrivate')) output += "&lt;private&gt; ";
								if (member.get('isInner')) output += "&lt;inner&gt; ";
								else if (member.get('isStatic')) output += "&lt;static&gt; ";
							!}</td>
							<td class="nameDescription">
								<div class="fixedFont"><if test="member.get('isStatic')">{+member.get('memberof')+}.</if><b>{+new Link().toSymbol(member.get('alias')).withText(member.get('name'))+}</b>{+makeSignature(member.get('params'))+}
								<if test="member.get('type')"><span class="light"> : {+new Link().toSymbol(member.get('type'))+}</span></if>
								</div>
								<div class="description">{+resolveLinks(summarize(member.get('desc')))+}</div>
							</td>
						</tr>
					</for>
					</tbody>
				</table>
				</if>
				
				<if test="data.get('inheritsFrom').length">
				<dl class="inheritsList">
				{!
					var inheritedMembers = data.get('methods').filter(function($) {return $.get('memberof') != data.get('alias')});
					var contributers = [];
					inheritedMembers.map(function($) {if (contributers.indexOf($.get('memberof')) < 0) contributers.push($.get('memberof'))});
					for (var i = 0, l = contributers.length; i < l; i++) {
						output +=
							"<dt>Methods inherited from class "+new Link().toSymbol(contributers[i])+": </dt>"
							+
							"<dd>" +
							inheritedMembers
							.filter(
								function($) { return $.get('memberof') == contributers[i] }
							)
							.sort(makeSortby("name"))
							.map(
								function($) { return new Link().toSymbol($.get('alias')).withText($.get('name')) }
							)
							.join(", ")
							+
							"</dd>";
					}
				
				!}
				</dl>
				</if>
			</if>

<!-- constructor details -->			
			<if test="!data.isNamespace()  && !data.isBuiltin()">
			<div class="details">
				<div class="sectionTitle">
					Constructor Detail
				</div>
				
				<div class="fixedFont">{!
					if (data.get('isPrivate')) output += "&lt;private&gt; ";
					if (data.get('isInner')) output += "&lt;inner&gt; ";
					
					output += "new <b>" + data.get('alias') + "</b>" + makeSignature(data.get('params'))
				!}</div>
				<div class="description">
					{+resolveLinks(data.get('desc'))+}
					<if test="data.get('author')"><br /><i>Author: </i>{+data.get('author')+}.</if>
				</div>
				
				<if test="data.get('example')">
				<pre class="code">{+data.get('example')+}</pre>
				</if>
				
				<if test="data.get('params').length">
					<dl class="detailList">
						<dt class="heading">Parameters:</dt>
						<for each="item" in="data.get('params')">
							<dt>
								{+((item.type)?""+("<span class=\"light\">"+(new Link().toSymbol(item.type)+"</span>"))+" " : "")+} <b>{+item.name+}</b>
								<if test="item.isOptional"><i>Optional<if test="defined(item.defaultValue)">, Default: {+item.defaultValue+}</if></i></if>
							</dt>
								<dd>{+resolveLinks(item.desc)+}</dd>
						</for>
					</dl>
				</if>
				<if test="data.get('exceptions').length">
					<dl class="detailList">
						<dt class="heading">Exceptions:</dt>
						<for each="item" in="data.get('exceptions')">
							<dt>
								{+((item.type)?"<span class=\"light\">"+(new Link().toSymbol(item.type))+"</span> " : "")+} <b>{+item.name+}</b>
							</dt>
								<dd>{+resolveLinks(item.desc)+}</dd>
						</for>
					</dl>
				</if>
				<if test="data.get('returns').length">
					<dl class="detailList">
						<dt class="heading">Returns:</dt>
						<for each="item" in="data.get('returns')">
								<dd>{+((item.type)?"<span class=\"light\">"+(new Link().toSymbol(item.type))+"</span> " : "")+}{+resolveLinks(item.desc)+}</dd>
						</for>
					</dl>
				</if>
				<if test="data.get('requires').length">
					<dl class="detailList">
						<dt class="heading">Requires:</dt>
						<for each="item" in="data.get('requires')">
							<dt>
								{+new Link().toSymbol(item.name)+}
							</dt>
							<dd>{+resolveLinks(item.desc)+}</dd>
						</for>
					</dl>
				</if>
				<if test="data.get('see').length">
					<dl class="detailList">
						<dt class="heading">See:</dt>
						
						<for each="item" in="data.get('see')">
							<dt>
								{+new Link().toSymbol(item)+}
							</dt>
						</for>
					</dl>
				</if>
			</div>
			</if>
			
<!-- properties details -->			
			<if test="defined(ownProperties) && ownProperties.length">
				<div class="sectionTitle">
					Field Detail
				</div>
				<for each="member" in="ownProperties">
					<a name="{+Link.symbolNameToLinkName(member)+}"> </a>
					<div class="fixedFont">{!
						if (member.get('isPrivate')) output += "&lt;private&gt; ";
						if (member.get('isInner')) output += "&lt;inner&gt; ";
						else if (member.get('isStatic')) output += "&lt;static&gt; ";
					!}
					
					<if test="member.get('isStatic')"><span class="light">{+member.get('memberof')+}.</span></if><b>{+member.get('name')+}</b>
					<if test="member.get('type')"><span class="light"> : {+new Link().toSymbol(member.get('type'))+}</span></if>
					<if test="member.get('defaultValue')">(<i>Default: {+member.get('defaultValue')+}</i>)</if>
			
					</div>
					<div class="description">
						{+resolveLinks(member.get('desc'))+}
						<if test="member.get('srcFile') != data.get('srcFile')">
							<br />
							<i>Defined in: </i> {+new Link().toSrc(member.get('srcFile'))+}.
						</if>
						<if test="member.get('author')"><br /><i>Author: </i>{+member.get('author')+}.</if>
					</div>
					
					<if test="member.get('example')">
					<pre class="code">{+member.get('example')+}</pre>
					</if>
				
					<if test="member.get('see').length">
						<dl class="detailList">
							<dt class="heading">See:</dt>
							<for each="item" in="member.get('see')">
								<dt>
									{+new Link().toSymbol(item)+}
								</dt>
							</for>
						</dl>
					</if>
					<if test="!$member_last"><hr /></if>
				</for>
			</if>

<!-- methods details -->			
			<if test="defined(ownMethods) && ownMethods.length">
				<div class="sectionTitle">
					Method Detail
				</div>
				<for each="member" in="ownMethods">
					<a name="{+Link.symbolNameToLinkName(member)+}"> </a>
					<div class="fixedFont">{!
						if (member.get('isPrivate')) output += "&lt;private&gt; ";
						if (member.get('isInner')) output += "&lt;inner&gt; ";
					!}
					
					<if test="member.get('isStatic')"><span class="light">{+member.get('memberof')+}.</span></if><b>{+member.get('name')+}</b>{+makeSignature(member.get('params'))+}
					<if test="member.get('type')"><span class="light"> : {+new Link().toSymbol(member.get('type'))+}</span></if>
					</div>
					<div class="description">
						{+resolveLinks(member.get('desc'))+}
						<if test="member.get('srcFile') != data.get('srcFile')">
							<br />
							<i>Defined in: </i> {+new Link().toSrc(member.get('srcFile'))+}.
						</if>
						<if test="member.get('author')"><br /><i>Author: </i>{+member.get('author')+}.</if>
					</div>
					
					<if test="member.get('example')">
					<pre class="code">{+member.get('example')+}</pre>
					</if>
					
					<if test="member.get('params').length">
						<dl class="detailList">
							<dt class="heading">Parameters:</dt>
							<for each="item" in="member.get('params')">
								<dt>
									{+((item.type)?"<span class=\"light\">"+(new Link().toSymbol(item.type))+"</span> " : "")+}<b>{+item.name+}</b>
									<if test="item.isOptional"><i>Optional<if test="defined(item.defaultValue)">, Default: {+item.defaultValue+}</if></i></if>
								</dt>
								<dd>{+resolveLinks(item.desc)+}</dd>
							</for>
						</dl>
					</if>
					<if test="member.get('exceptions').length">
						<dl class="detailList">
							<dt class="heading">Exceptions:</dt>
							<for each="item" in="member.get('exceptions')">
								<dt>
									{+((item.type)?"<span class=\"light\">"+(new Link().toSymbol(item.type))+"</span> " : "")+} <b>{+item.name+}</b>
								</dt>
								<dd>{+resolveLinks(item.desc)+}</dd>
							</for>
						</dl>
					</if>
					<if test="member.get('returns').length">
						<dl class="detailList">
							<dt class="heading">Returns:</dt>
							<for each="item" in="member.get('returns')">
									<dd>{+((item.type)?"<span class=\"light\">"+(new Link().toSymbol(item.type))+"</span> " : "")+}{+resolveLinks(item.desc)+}</dd>
							</for>
						</dl>
					</if>
					<if test="member.get('requires').length">
						<dl class="detailList">
							<dt class="heading">Requires:</dt>
							<for each="item" in="member.get('requires')">
								<dt>
									{+new Link().toSymbol(item.name)+}
								</dt>
								<dd>{+resolveLinks(item.desc)+}</dd>
							</for>
						</dl>
					</if>
					<if test="member.get('see').length">
						<dl class="detailList">
							<dt class="heading">See:</dt>
							<for each="item" in="member.get('see')">
								<dt>
									{+new Link().toSymbol(item)+}
								</dt>
							</for>
						</dl>
					</if>
					<if test="!$member_last"><hr /></if>
				</for>
			</if>
			<hr />
		</div>
		
<!-- footer -->		
		<div class="fineprint" style="clear:both">
			<if test="JSDOC.opt.D.copyright">&copy;{+JSDOC.opt.D.copyright+}<br /></if>
			Documentation generated by <a href="http://www.jsdoctoolkit.org/" target="_blank">JsDoc Toolkit</a> {+JSDOC.VERSION+} on {+new Date()+}
		</div>
	</body>
</html>