<div class="body-wrap">
    <div class="top-tools">
        <a class="inner-link" href="#Ext.data.DataProxy-props"><img src="resources/s.gif" class="item-icon icon-prop">Properties</a>
        <a class="inner-link" href="#Ext.data.DataProxy-methods"><img src="resources/s.gif" class="item-icon icon-method">Methods</a>
        <a class="inner-link" href="#Ext.data.DataProxy-events"><img src="resources/s.gif" class="item-icon icon-event">Events</a>
        <a class="inner-link" href="#Ext.data.DataProxy-configs"><img src="resources/s.gif" class="item-icon icon-config">Config Options</a>
        <a class="bookmark" href="../docs/?class=Ext.data.DataProxy"><img src="resources/s.gif" class="item-icon icon-fav">Direct Link</a>
    </div>
    
    <div class="inheritance res-block">
        <pre class="res-block-inner">
            <a ext:cls="Ext.util.Observable" ext:member="" href="output/Ext.util.Observable.html">Observable</a>
            <img src="resources/elbow-end.gif"/>DataProxy
        </pre>
    </div>
    <h1>Class {[values.get("alias")]}</h1>
    <table cellspacing="0">
        <tr><td class="label">Package:</td><td class="hd-info">{[this.getPackageName(values.get("alias"))]}</td></tr>
        <tr><td class="label">Defined In:</td><td class="hd-info">{[values.get("srcFile")]}</td></tr>
        <tr><td class="label">Class:</td><td class="hd-info">{[this.getClassName(values.get("alias"))]}</td></tr>
        <tr><td class="label">Subclasses:</td><td class="hd-info">this could be figured out</td></tr>
        <tr><td class="label">Extends:</td><td class="hd-info"><a ext:cls="Ext.util.Observable" ext:member="" href="">{[values.get("augments")]}</a></td></tr>
    </table>
    
    <div class="description">
                
    </div>
    
    <div class="hr"></div>
    <a id="Ext.data.DataProxy-configs"></a>
    <h2>Config Options</h2>
    <table cellspacing="0" class="member-table">
        <tr>
            <th class="sig-header" colspan="2">Config Options</th>
            <th class="msource-header">Defined By</th>
        </tr>
        
        
        
        <tr class="config-row inherited expandable">
            <td class="micon"><a class="exi" href="#expand">&nbsp;</a></td>
            <td class="sig">
                <a id="Ext.data.DataProxy-listeners"></a>
                <b>listeners</b> : Object            <div class="mdesc">
                <div class="short">A config object containing one or more event handlers to be added to this object during initialization. This should b...</div>
                <div class="long">
                    A config object containing one or more event handlers to be added to this object during initialization. This should be a valid listeners config object as specified in the <a ext:cls="Ext.util.Observable" ext:member="addListener" href="output/Ext.util.Observable.html#addListener">addListener</a> example for attaching multiple handlers at once.            </div>
                </div>
            </td>
            <td class="msource"><a ext:cls="Ext.util.Observable" ext:member="#listeners" href="output/Ext.util.Observable.html#listeners">Observable</a></td>
        </tr>
    </table>
    <a id="Ext.data.DataProxy-props"></a>      
    <h2>Public Properties</h2>
    <p>properties: {[Ext.encode(values.getProperties())]}</p>
    <p>events: {[Ext.encode(values.getEvents())]}</p>    
    <p>cfg: {[Ext.encode(values.get("cfg"))]}</p>
    
    
    <table cellspacing="0" class="member-table">            
        <tr>
            <th class="sig-header" colspan="2">Property</th>
            <th class="msource-header">Defined By</th>
        </tr>
        
        <tpl for="getProperties()">
                    
        <tr class="property-row">
            <td class="micon">
                <a class="exi" href="#expand">&nbsp;</a>
            </td>
            <td class="sig">
                <a id="Ext.Component-disabled"></a>
                <b>{[values.get("name")]}</b> : {[values.get("type")]}            
                <div class="mdesc">   
                    {[values.get("desc")]}                        
                </div>
            </td>
            <td class="msource">Defined By</td>
        </tr>
        
        </tpl>
        <!--
        <tr class="property-row alt">
            <td class="micon"><a class="exi" href="#expand">&nbsp;</a></td>
            <td class="sig">
                <a id="Ext.Component-hidden"></a>
                <b>hidden</b> : Boolean            
                <div class="mdesc">                            
                    True if this component is hidden. Read-only.                       
                </div>
            </td>
            <td class="msource">Component</td>
        </tr>
        <tr class="property-row">
            <td class="micon">
                <a class="exi" href="#expand">&nbsp;</a>
            </td>
            <td class="sig">
                <a id="Ext.Component-initialConfig"></a>
                <b>initialConfig</b> : Object            
                <div class="mdesc">
                    This Component's initial configuration specification. Read-only.                        
                </div>
            </td>
            <td class="msource">Component</td>
        </tr>
        <tr class="property-row alt expandable">
            <td class="micon"><a class="exi" href="#expand">&nbsp;</a></td>
            <td class="sig">
                <a id="Ext.Component-ownerCt"></a>
                <b>ownerCt</b> : Ext.Container            
                <div class="mdesc">
                    <div class="short">
                        The component's owner Ext.Container (defaults to undefined, and is set automatically when
                        the component is added to a...
                    </div>        
                    <div class="long">
                        The component's owner <a ext:cls="Ext.Container" href="output/Ext.Container.html">Ext.Container</a> 
                        (defaults to undefined, and is set automatically when
                        the component is added to a container).  Read-only.            
                    </div>
                </div>
            </td>
            <td class="msource">Component</td>
        </tr>

        <tr class="property-row">
            <td class="micon"><a class="exi" href="#expand">&nbsp;</a></td>
            <td class="sig">
                <a id="Ext.Component-rendered"></a>
                <b>rendered</b> : Boolean            
                <div class="mdesc">
                    True if this component has been rendered. Read-only.                        
                </div>
            </td>    
            <td class="msource">Component</td>
        </tr>
        -->
    </table>
                   
    <a id="Ext.data.DataProxy-methods"></a>
    <h2>Public Methods</h2>    
    <table cellspacing="0" class="member-table">
        <tr>
            <th class="sig-header" colspan="2">Method</th>
            <th class="msource-header">Defined By</th>
        </tr>
        
        <tpl for="get('methods')">        
        <tr class="method-row inherited expandable">
            <td class="micon"><a class="exi" href="#expand">&nbsp;</a></td>
            <td class="sig">
                <a id="Ext.data.DataProxy-addEvents"></a>                
                <b>{[values.get("name")]}</b>(&nbsp;<code><tpl for="get('params')">{[(!values.isOptional) ? values.type + " " + values.name : "[" + values.type + " " + values.name + "]"]}<tpl if="xindex < xcount">, </tpl></tpl></code>&nbsp;) : {[(values.get("type") ? values.get("type") : "void")]}                                
                <div class="mdesc">
                    <div class="short">{[values.get("desc")]}</div>
                    <div class="long">
                        {[values.get("desc")]}    
                        <div class="mdetail-params">                            
                            <strong>Parameters:</strong>                            
                            <ul>
                            <tpl for="get('params')">
                                <li>
                                    <code>{name}</code> : {type}
                                    <div class="sub-desc">{[(values.isOptional==true) ? (optional) : ""]}&nbsp;{desc}</div>                                   
                                </li>
                            </tpl>
                            </ul>
                            
                            <strong>Returns:</strong>
                            <ul>
                                <li><code>{[(values.get("type")) ? values.get("type") : "void"]}</code></li>
                            </ul>                    
                        </div>
                    </div>                    
                </div>
            </td>
            <td class="msource">
                <a ext:cls="Ext.util.Observable" ext:member="#addEvents" href="output/Ext.util.Observable.html#addEvents">Observable</a>
            </td>
        </tr>
        </tpl>                                                  
    </table>
    
    <a id="Ext.data.DataProxy-events"></a>
    <h2>Public Events</h2>
    <table cellspacing="0" class="member-table">
        <tr>
            <th class="sig-header" colspan="2">Event</th>   
            <th class="msource-header">Defined By</th>
        </tr>
        <tr class="event-row expandable">
            <td class="micon"><a class="exi" href="#expand">&nbsp;</a></td>
            <td class="sig">
                <a id="Ext.data.DataProxy-beforeload"></a>
                <b>beforeload</b> : (&nbsp;<code>Object This</code>, 
                <code>Object params</code>&nbsp;)            
                <div class="mdesc">   
                    <div class="short">Fires before a network request is made to retrieve a data object.</div>
                    <div class="long">
                        Fires before a network request is made to retrieve a data object.    
                        <div class="mdetail-params">
                            <strong style="font-weight:normal;">Listeners will be called with the following arguments:</strong>
                            <ul>
                                <li>
                                    <code>This</code> : Object
                                    <div class="sub-desc">DataProxy object.</div>
                                </li>
                                <li>
                                    <code>params</code> : Object
                                    <div class="sub-desc">The params parameter to the load function.</div>
                                </li>
                            </ul>   
                        </div>
                    </div>
                </div>
            </td>                        
        </tr>            
    </table>            
</div>